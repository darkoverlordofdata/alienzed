// Generated by CoffeeScript 1.8.0

/*
 * callback from the web view with state
 */
var Boot, Game, Splash, game, game_start;

game_start = function() {
  return game.eraseSplash();
};

Game = (function() {
  Game.prototype.VERSION = '0.0.34';

  Game.prototype.width = 320;

  Game.prototype.height = 512;

  Game.prototype.base = 'app/packages/alienzone/res/';

  Game.prototype.objects = [];

  function Game() {
    var game;
    this.objects = [];
    game = new Phaser.Game(this.width, this.height, Phaser.CANVAS, "");
    game.state.add("Boot", new Boot(this, game));
    game.state.add("Splash", new Splash(this, game));
    game.state.start("Boot");
    Cocoon.App.WebView.on('load', {
      success: function() {
        return Cocoon.App.showTheWebView(0, 0, window.innerWidth * window.devicePixelRatio, window.innerHeight * window.devicePixelRatio);
      },
      error: function() {
        return console.log(JSON.stringify(arguments));
      }
    });
    Cocoon.App.loadInTheWebView("app/index.html");
  }

  Game.prototype.eraseSplash = function() {
    var obj, _i, _len, _ref, _results;
    _ref = this.objects;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      obj = _ref[_i];
      _results.push(obj.destroy());
    }
    return _results;
  };

  return Game;

})();


/*
 * Boot
 *   Load the logo image,
 *   configure the game
 */

Boot = (function() {
  function Boot(app, game) {
    this.app = app;
    this.game = game;
    console.log('Initialized Class Boot');
  }

  Boot.prototype.preload = function() {
    return this.game.load.image('logo', "" + this.app.base + "images/d16a.png");
  };

  Boot.prototype.create = function() {
    this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
    this.game.scale.pageAlignHorizontally = true;
    this.game.scale.pageAlignVertically = true;
    this.game.scale.setScreenSize(true);
    this.game.physics.startSystem(Phaser.Physics.ARCADE);
    return this.game.state.start("Splash");
  };

  return Boot;

})();


/*
 * Splash
 *   Display the logo splash
 */

Splash = (function() {
  function Splash(app, game) {
    this.app = app;
    this.game = game;
    console.log('Initialized Class Splash');
  }

  Splash.prototype.preload = function() {
    var build, copyright, obj, style10, style20, title;
    title = 'Alien Zone';
    copyright = 'Copyright 2014 Dark Overlord of Data';
    build = "Build " + this.app.VERSION;
    style10 = {
      fill: 'yellow',
      font: '10pt opendyslexic'
    };
    style20 = {
      fill: 'orange',
      font: '40pt opendyslexic'
    };
    obj = this.game.add.sprite(this.app.width / 2, this.app.height / 2, 'logo');
    obj.anchor.setTo(0.5, 0.5);
    this.app.objects.push(obj);
    obj = this.game.add.text(this.app.width / 2, 80, title, style20);
    obj.anchor.setTo(0.5);
    this.app.objects.push(obj);
    obj = this.game.add.text(this.app.width / 2, 400, build, style10);
    obj.anchor.setTo(0.5);
    this.app.objects.push(obj);
    obj = this.game.add.text(this.app.width / 2, 480, copyright, style10);
    obj.anchor.setTo(0.5);
    this.app.objects.push(obj);
    this.game.load.spritesheet('sprite1', "" + this.app.base + "images/star17.png", 17, 17);
    return this.game.load.spritesheet('sprite2', "" + this.app.base + "images/bucky.png", 64, 64);
  };

  Splash.prototype.create = function() {

    /*
    star particles
     */
    var backBalls, backStars;
    backStars = this.game.add.emitter(160, -32, 100);
    backStars.makeParticles('sprite1', [0, 1]);
    backStars.maxParticleScale = 0.6;
    backStars.minParticleScale = 0.2;
    backStars.setYSpeed(20, 50);
    backStars.setXSpeed(-15, 15);
    backStars.gravity = 0;
    backStars.width = this.app.width;
    backStars.minRotation = 0;
    backStars.maxRotation = 0;
    backStars.start(false, 14000, 500);

    /*
    buckyball particles
     */
    backBalls = this.game.add.emitter(160, -32, 50);
    backBalls.makeParticles('sprite2', [0]);
    backBalls.maxParticleScale = 0.75;
    backBalls.minParticleScale = 0.5;
    backBalls.setYSpeed(20, 70);
    backBalls.setXSpeed(-20, 20);
    backBalls.gravity = 0;
    backBalls.width = this.app.width;
    backBalls.minRotation = 0;
    backBalls.maxRotation = 0;
    backBalls.start(false, 14000, 1000);

    /*
    signal the game to start
     */
    return Cocoon.App.forwardAsync("D16A_WAIT=false;window.dispatchEvent(new CustomEvent('D16A_START'))");
  };

  return Splash;

})();

game = (function() {
  return new Game();
})();

//# sourceMappingURL=bootstrap.js.map
