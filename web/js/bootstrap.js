// Generated by CoffeeScript 1.8.0

/*
  callback from the web view with state
 */
var game, game_start;

game_start = function(state) {
  return game.state.start(state);
};


/*
  Bootstrap
 */

game = (function() {
  var VERSION, area, base, bmd, boot, done, dropTime, height, load, log, logo, sprite1, sprite2, start, texts, width;
  VERSION = '0.0.34';
  base = 'app/packages/alienzone/res/';
  sprite1 = 'star17';
  sprite2 = 'bucky';
  logo = 'logo';
  width = 320;
  height = 512;
  bmd = void 0;
  area = void 0;
  dropTime = 0;
  texts = [];
  done = false;

  /*
  Log
   */
  log = function() {
    return console.log("Running " + (game.state.getCurrentState().state.current) + " state  ");
  };

  /*
  Boot
    Load the logo image,
    configure the game
   */
  boot = {
    init: function() {
      return log();
    },
    preload: function() {
      return game.load.image(logo, "" + base + "images/" + logo + ".png");
    },
    create: function() {
      game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      game.scale.pageAlignHorizontally = true;
      game.scale.pageAlignVertically = true;
      game.scale.setScreenSize(true);
      game.physics.startSystem(Phaser.Physics.ARCADE);
      return game.state.start("Load");
    }
  };

  /*
  Load
    Display the logo, load the rest
   */
  load = {
    init: function() {
      return log();
    },
    preload: function() {
      game.load.spritesheet(sprite1, "" + base + "images/" + sprite1 + ".png", 17, 17);
      return game.load.spritesheet(sprite2, "" + base + "images/" + sprite2 + ".png", 64, 64);
    },
    create: function() {
      var build, copyright, style10, style20, title;
      title = 'AlienZone';
      copyright = 'Copyright 2014 Dark Overlord of Data';
      build = "Build " + VERSION;
      style10 = {
        fill: '#fff',
        font: '10pt opendyslexic'
      };
      style20 = {
        fill: '#fff',
        font: '30pt opendyslexic'
      };
      texts.push(game.add.text(50, 80, title, style20));
      texts.push(game.add.text(120, 400, build, style10));
      texts.push(game.add.text(20, 480, copyright, style10));
      bmd = game.make.bitmapData();
      bmd.load(logo).cls();
      bmd.addToWorld(game.world.centerX, game.world.centerY, 0.5, 0.5, 2, 2);
      game.stage.smoothed = false;
      area = new Phaser.Rectangle(0, bmd.height, bmd.width, 1);
      return dropTime = game.time.now + 250;
    },
    update: function() {
      var i, y, _i, _j, _ref, _ref1;
      if (area.y > 0 && game.time.now > dropTime) {
        for (y = _i = 0, _ref = area.y; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {
          bmd.copyRect(logo, area, 0, y);
        }
        area.y--;
        return dropTime = game.time.now + 25;
      } else if (game.time.now > dropTime) {
        if (done === false) {
          for (i = _j = 0, _ref1 = texts.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
            game.add.tween(texts[i]).to({
              alpha: 0
            }, 1500, Phaser.Easing.Linear.None, true);
          }
          bmd.shiftHSL(0.1);
          setInterval(function() {
            return bmd.shiftHSL(0.1);
          }, 500);
          Cocoon.App.forwardAsync("D16A_WAIT=false;window.dispatchEvent(new CustomEvent('D16A_START'))");
        }
        return done = true;
      }
    }
  };

  /*
  Start
    start the game animation
   */
  start = {
    init: function() {
      return log();
    },
    preload: function() {},
    create: function() {
      var backBalls, backStars;
      game.scale.scaleMode = Phaser.ScaleManager.EXACT_FIT;
      backStars = game.add.emitter(160, -32, 600);
      backBalls = game.add.emitter(160, -32, 50);

      /*
      star particles
       */
      backStars.makeParticles(sprite1, [0]);
      backStars.maxParticleScale = 0.6;
      backStars.minParticleScale = 0.2;
      backStars.setYSpeed(20, 100);
      backStars.setXSpeed(-15, 15);
      backStars.gravity = 0;
      backStars.width = width;
      backStars.minRotation = 0;
      backStars.maxRotation = 40;
      backStars.start(false, 14000, 200);

      /*
      buckyball particles
       */
      backBalls.makeParticles(sprite2, [0]);
      backBalls.maxParticleScale = 0.75;
      backBalls.minParticleScale = 0.5;
      backBalls.setYSpeed(50, 150);
      backBalls.setXSpeed(-20, 20);
      backBalls.gravity = 0;
      backBalls.width = width;
      backBalls.minRotation = 0;
      backBalls.maxRotation = 40;
      return backBalls.start(false, 14000, 1000);
    }
  };
  game = new Phaser.Game(width, height, Phaser.CANVAS, "");
  game.state.add("Boot", boot);
  game.state.add("Load", load);
  game.state.add("Start", start);
  game.state.start("Boot");
  Cocoon.App.WebView.on('load', {
    success: function() {
      return Cocoon.App.showTheWebView();
    },
    error: function() {
      return console.log(JSON.stringify(arguments));
    }
  });
  Cocoon.App.loadInTheWebView("app/index.html");
  return game;
})();

//# sourceMappingURL=bootstrap.js.map
